
from PIL import Image
import pdb
import numpy as np
import cv2

N = 40

image = Image.open('Target_W.png').convert('RGB')
image_tiny = image.resize((N,N)) 
target_c = np.sum(np.array(image_tiny), axis=2)
target_c = target_c.astype('float64')
target_c[target_c > 0] = 255

# pdb.set_trace()

target_up = np.zeros(target_c.shape)
target_down = np.zeros(target_c.shape)
target_left = np.zeros(target_c.shape)
target_right = np.zeros(target_c.shape)

target_up[:,0:N-1] = target_c[:,1:N]
target_down[:,1:N] = target_c[:,0:N-1]

target_left[0:N-1,:] = target_c[1:N,:]
target_right[1:N,:] = target_c[0:N-1,:]



image = cv2.resize(np.transpose(target_c), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_c.png", image)

# Get translated images
image = cv2.resize(np.transpose(target_up), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_up.png", image)
image = cv2.resize(np.transpose(target_down), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_down.png", image)
image = cv2.resize(np.transpose(target_left), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_left.png", image)
image = cv2.resize(np.transpose(target_right), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_right.png", image)

# Get events generated by translation
image = cv2.resize(np.transpose(abs(target_up-target_c)), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_d_u.png", image)
image = cv2.resize(np.transpose(abs(target_down-target_c)), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_d_d.png", image)
image = cv2.resize(np.transpose(abs(target_left-target_c)), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_d_l.png", image)
image = cv2.resize(np.transpose(abs(target_right-target_c)), (N,N), interpolation = cv2.INTER_AREA)
cv2.imwrite("pixTarget/pxT_d_r.png", image)
